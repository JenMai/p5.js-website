Skip-To-Content: "Skip to content"
Language-Settings: "Paramètres de langue"
Sidebar-Title: "Site Navigation"
Home: "Accueil"
Editor: "Éditeur"
Download: "Télécharger"
Start: "Démarrer"
Reference: "Référence"
Libraries: "Librairies"
Learn: "Apprendre"
Examples: "Exemples"
Books: "Bibliographie"
Community: "Communauté"
Contribute: "Contribuer"
Forum: "Forum"

footerxh1: "Mentions"
footer1: "p5.js a été créée par "
footer2: " et est développé par une communauté de collaborateurs avec le soutien de la"
footer3: " et "
footer4: "Identité visuelle et design par "

tagline1: "le fun de Processing x l'excentricité de JavaScript"
tagline2: "la simplicité de Processing x la flexibilité de JavaScript"
tagline3: "l'intuitivité de Processing x la puissance de JavaScript"
tagline4: "la créativité de processing X le dynamisme de Javascript"
tagline5: "la communauté Processing x la communauté JavaScript"
tagline6: "la puissance de Processing x la portée de JavaScript"

home:
  start-creating: "Commencez à créer !"
  p1xh1: "Salut !"
  p1x1: "p5.js est une librairie Javascript pour les créatifs, rendant le développement
  accessible et complet pour les artistes, designeurs, le personnel enseignant, les débutants et tout le reste !
  p5.js est gratuit et open source, car nous pensons que les logiciels et les outils pour les apprendre doivent
  être accessibles à tous"
  p1x2: "Utilisant la métaphore du dessin, p5.js propose un set complet de fonctionnalités graphiques. 
  Vous n'êtes cependant pas limité à l'espace de la toile. Toute la page de votre navigateur est votre espace de travail, 
  incluant des objets HTML5 pour les textes, inputs, vidéos, la webcam et les sons."
  p2xh2: "Communauté"
  p2x1: "Nous sommes une communauté solidaire de personnes de toutes identités et expressions de genres, d'orientations sexuelles, ethnicités, langues, neurotypes, tailles, capacités, classes sociales, religions, cultures, sous-cultures, affinités politiques, âge, compétences, occupation et antécédents. Nous avons conscience que tout le monde n'a pas le temps, les moyens ni la capacité de participer activement, mais nous reconnaissons et encourageons tout type d'implication. Nous facilitons et encourageons l'accès et l'émancipation. Nous sommes tous des apprentis."
  p2x2: "p5.js est une interprétation de "
  p2x3: " pour le web d'aujourd'hui. Nous organisons des évènements et opérons avec le soutiens de la "
  p2x4: "."
  p2x5: "Apprenez-en plus sur "
  p2x6: "notre communauté"
  p2x7: "."

  p3xh2: "Commencez maintenant"
  p3xp1: "Créez votre premier esquisse avec "
  p3xp2: ". En savoir plus sur les croquis avec p5.js sur la page "
  p3xp3: "Démarrer"
  p3xp4: " ainsi que toutes les fonctionnalités dans les "
  p3xp5: "Références"
  p3xp6: "."

  p4xh2: "Impliquez-vous"
  p4xp1: "Vous pouvez contribuer à p5.js de multiples façons :"
  p4xp2: "Options de contribution"
  p4xp3: "Partagez une de vos créations !"
  p4xp4: "Enseignez pour un atelier ou un cours."
  p4xp5: "Organisez une rencontre, un évènement."
  p4xp6: "Contribuez au code source."

  sketch_by: "par"
  sketch_info: "Croquis de la page d'accueil adapté du travail de l'élève de 3ème Grace Obergfell."
  sketch_info_link: "CC Fest NYC le 8 juin, un événement de codage gratuit et inclusif pour les étudiants et les enseignants."

copyright:
  copyright-title: "Informations sur le droit d'auteur"
  copyright1: "La librairie p5.js est libre ; vous pouvez la redistribuer et/ou la modifier selon les termes de la "
  copyright2: "tel que publié par la Free Software Foundation, version 2.1."
  copyright3: "La référence du langage se trouve sous une licence "
  copyright4: "qui permet de réutiliser ce contenu à des fins non commerciales s'il est crédité."

get started:
  get-started-title: "Démarrer"
  get-started1: "Cette page vous guide dans la mise en place d'un projet p5.js et la réalisation de votre première esquisse."
  get-started2: "Si vous souhaitez commencer avec le nouveau "
  get-started3: "Éditeur p5.js"
  get-started4: ", vous pouvez sauter jusqu'à"
  get-started5: "Votre Première Esquisse"
  download-title: "Téléchargement et Installation des Fichiers"
  download1: "La façon la plus simple de commencer est d'utiliser l'exemple vide qui accompagne le "
  download2: "téléchargement intégral de "
  download3: " p5.js."
  download4: "Si vous regardez dans index.html, vous remarquerez qu'il contient un lien vers le fichier p5.js. Si vous souhaitez utiliser la version minifiée (compressée pour un chargement plus rapide des pages), changez le lien vers p5.min.js."
  download5: "Vous pouvez également vous connecter à un fichier p5.js hébergé en ligne. Toutes les versions de p5.js sont stockées dans un CDN (Content Delivery Network). Vous pouvez consulter l'historique de ces versions ici : "
  download6: ". Dans ce cas, vous pouvez modifier le lien vers :"
  download7: "Un exemple de page HTML pourrait ressembler à ceci : "
  download8: "Vous pouvez également commencer avec ce modèle à partir de "
  download9: "."
  environment-title: "Environnement"
  environment1: "Vous pouvez utiliser l'"
  environmentlink: "http://en.wikipedia.org/wiki/Source_code_editor"
  environment2: "éditeur de texte"
  environment3: "de votre choix. Les instructions pour travailler avec "
  environment4: " sont inclus ci-dessous, d'autres bonnes options d'éditeur comprennent "
  environment5: " et "
  environment6: "Si vous êtes un utilisateur de lecteur d'écran et que vous n'utilisez pas l'éditeur web p5, vous pouvez utiliser "
  environment7: " ou "
  environment8: "Open Sublime. Allez dans le menu File et choisissez Open... et choisissez le dossier dans lequel se trouvent vos fichiers html et js. Dans la barre latérale gauche, vous devriez maintenant voir le nom du dossier en haut, avec une liste des fichiers contenus dans le dossier directement en dessous."
  environment9: "Cliquez sur votre fichier sketch.js et il s'ouvrira sur la droite où vous pourrez le modifier. "
  environment10: "Le code p5 de démarrage s'est ouvert dans le sublime editor."
  environment11: "Ouvrez le fichier index.html dans votre navigateur en double-cliquant sur celui-ci dans votre gestionnaire de fichiers ou écrivez :"
  environment12: "file:///le/chemin/de/votre/fichier/html"
  environment13: " dans la barre d'adresse pour voir votre esquisse."
  your-first-sketch-title: "Votre première esquisse"
  your-first-sketch-intro1: "les utilisateurs de Processing sont invités à consulter le "
  your-first-sketch-intro2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  your-first-sketch-intro3: "tutoriel de transition depuis Processing"
  your-first-sketch-intro4: "Dans votre éditeur, écrivez le code suivant :"
  your-first-sketch2: "Cette ligne de code signifie \"dessiner une ellipse, dont le centre est à 50 pixels à partir de la gauche et à 50 pixels à partir du côté haut, avec une largeur et une hauteur de 80 pixels\"."
  your-first-sketch3: "Enregistrez votre esquisse et rafraîchissez la vue de votre page dans votre navigateur. Si vous avez tout écrit correctement, vous verrez apparaître cette page dans la fenêtre d'affichage : "
  your-first-sketch4: "Si vous utilisez un lecteur d'écran, vous devez soit activer les sorties accessibles dans l'éditeur en ligne p5, en dehors de l'éditeur vous devez ajouter la bibliothèque d'accessibilité dans votre html. Pour en savoir plus sur "
  your-first-sketch5: "utiliser p5 avec un lecteur d'écran"
  your-first-sketch6: " et pour en apprendre plus sur "
  your-first-sketch7: "la librairie d'accessibilité"
  your-first-sketch8: "la toile a un cercle de largeur et de hauteur 50 à la position 80 x et 80 y"
  your-first-sketch9: "Si vous ne l'avez pas écrit correctement, vous risquez de ne rien voir. Dans ce cas, assurez-vous que vous avez copié exactement le code de l'exemple : les chiffres doivent être contenus entre parenthèses et séparés par une virgule, et la ligne doit se terminer par un point-virgule."
  your-first-sketch10: "L'une des difficultés les plus importantes lorsque l'on commence à programmer, c'est qu'il faut être très précis sur la syntaxe. Le navigateur n'est pas toujours assez intelligent pour comprendre ce que vous voulez dire, et peut être assez pointilleux sur l'emplacement de la ponctuation. Vous vous y habituerez avec un peu de pratique. Selon le navigateur que vous utilisez, vous pouvez également voir les erreurs en regardant la \"console\" JavaScript. Dans Chrome, par exemple, elle est dans Plus d'outils > Outils de développement > Console."
  your-first-sketch11: "Ensuite, nous allons passer à une esquisse un peu plus passionnante. Supprimez le texte du dernier exemple, et essayez ceci : "
  your-first-sketch12: "Ce programme crée une toile de 640 pixels de large et 480 pixels de haut, puis  il commence à dessiner des cercles blancs à la position de la souris. Lorsqu'un bouton de la souris est enfoncé, la couleur du cercle devient noire. Nous expliquerons plus en détail les éléments de ce programme plus tard. Pour l'instant, lancez le code, déplacez la souris et cliquez pour en faire l'expérience."
  your-first-sketch13: "la toile comporte de multiples cercles dessinés suivant le trajet de la souris"
  first-sketch-heading1: "Extrait de code avec ellipse"
  first-sketch-heading2: "Note pour les utilisateurs de lecteurs d'écran"
  first-sketch-heading3: "Extrait de code avec interaction"
  what-next-title: "Et Ensuite ?"
  processing-transition1: "Lisez le "
  processing-transition2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  processing-transition3: "tutoriel de transition depuis Processing"
  processing-transition4: " pour apprendre comment passer de Processing à p5.js, et les principales différences entre les deux."
  reference1: "Voir le "
  reference2: " référence"
  reference3: " pour une documentation complète."
  learn1: "Consultez la "
  learn2: "page apprendre"
  learn3: " et celle des "
  learn4: "exemples"
  learn5: " pour en savoir davantage."
  learn6: "Si vous souhaitez utiliser le p5 avec un lecteur d'écran, consultez le "
  learn7: "tutoriel sur utiliser p5 avec un lecteur d'écran"
  book1: "Certaines parties de ce tutoriel ont été adaptées du livre, Getting Started with p5.js, de Lauren McCarthy, Casey Reas, et Ben Fry, O'Reilly / Make. Copyright © 2015. Tous droits réservés."

download:
  Download: "Téléchargement"
  download-intro: "Bienvenue ! Bien qu'elle soit intitulée \"Téléchargement\", cette page contient en fait une collection de liens permettant de télécharger la bibliothèque ou de commencer à travailler avec elle en ligne. Nous avons essayé d'ordonner selon ce qu'un débutant pourrait vouloir en premier lieu, puis les ressources que des développeurs plus expérimentés pourraient rechercher."
  editor-title: "Éditeur"
  p5.js-editor: "éditeur p5.js"
  p5.js-editor-intro: "Ce lien vous redirige vers l'éditeur p5.js en ligne afin que vous puissiez commencer à utiliser p5.js immédiatement."
  editor-includes: "Commencez à coder en utilisant l'éditeur p5.js, aucune configuration n'est nécessaire !"
  complete-library-title: "Librairie Complète"
  complete-library-intro1: "Ceci est un téléchargement contenant le fichier de la librairie p5.js, l'addon p5.sound et un exemple. Il ne contient pas d'éditeur. Voir "
  complete-library-intro2: "Démarrer"
  complete-library-intro3: " pour apprendre comment mettre en place un projet p5.js."
  p5.js-complete: "p5.js complet"
  includes-1: "Inclut :"
  includes-2: "p5.js, p5.sound.js et un exemple de projet"
  includes-3: "Version "
  single-files-title: "Fichiers seuls"
  single-files-intro: "Il s'agit de téléchargements ou de liens vers le fichier de la librairie p5.js. Aucun contenu supplémentaire n'est inclus."
  single-file: "Fichier seul : "
  p5.js-uncompressed: "Version complète non-compressée"
  compressed: "Version compressée"
  link: "Lien : "
  statically-hosted-file: "Fichier hébergé statiquement"
  etc-title: "Ressources Github"
  older-releases: "Versions précédentes (anciennes versions et changelogs)"
  github-repository: "Dépôt (GitHub)"
  report-bugs: "Signaler les problèmes, les bugs et les erreurs"
  supported-browsers: "Navigateurs pris en charge "

  support-title: "Soutenez p5.js !"
  support-options: "Options de Soutiens"
  support-1: "p5.js est un logiciel libre et open source. Nous voulons rendre notre communauté aussi ouverte et inclusive que possible. Vous pouvez soutenir ce projet en "
  support-2: "devenant un membre"
  support-3: " de la Processing Foundation en tant qu'individu, studio ou établissement d'enseignement. Vous pouvez également "
  support-4: "faire un don"
  support-5: " sans adhésion."
  support-6: "Individuel"
  support-7: "$25"
  support-8: "Studio"
  support-9: "$250"
  support-10: "Établissement d'Enseignement"
  support-11: "$5/étudiant ou $500"
  support-12: "Votre adhésion soutient le développement de logiciels (pour p5.js, Processing, Processing.py, Processing pour Android et ARM, des ressources éducatives comme des exemples de codes et des tutoriels, "
  support-13: "des bourses d'études"
  support-14: " et "
  support-15: "des événements communautaires"
  support-16: ". Nous avons besoin de votre aide !"
  support-17: "p5.js Conférence des Contributeurs au CMU STUDIO for Creative Inquiry à Pittsburgh (Crédit image : Taeyoon Choi)"
  support-18: "Saskia Freeke, membre de Processing Fellow, organise des ateliers de Code Liberation x Processing à Londres (Crédit image : Code Liberation Foundation)"
  support-19: "Conférence \"Apprendre à enseigner, enseigner à apprendre\" avec la SFPC (Crédit image : Kira Simon-Kennedy)"
  support-20: "Atelier de Cassie Tarakajian, Processing Foundation Fellow, à Code Art Miami (Crédit image : Christian Arévalo Photography)"
  support-21: "Taeyoon Choi et un interprète ASL à l'atelier Signing Coders p5.js (Crédit image : Taeyoon Choi)"
  support-22: "Lancement du Google Summer of Code (Crédit image : Taeyoon Choi)"
  support-23: "Atelier de Cassie Tarakajian, Processing Foundation Fellow, à Code Art Miami (Crédit image : Christian Arévalo Photography)"
  support-24: "Luisa Pereira et Yeseul Song aident à faciliter un atelier p5.js basé sur la langue des signes et dirigé par Taeyoon Choi (Crédit image : Taeyoon Choi)"
  support-25: "p5.js Conférence des Contributeurs au CMU STUDIO for Creative Inquiry à Pittsburgh (Crédit image : Taeyoon Choi)"
  support-26: "Processing Fellow Digital Citizens Lab organise une table ronde sur l'enseignement des STIM au Centre international de la photographie (Crédit photo : Centre international de la photographie)"
  support-27: "Participants à l'atelier p5.js à Santiago du Chili, dirigé par Aarón Montoya-Moraga (Crédit image : Aarón Montoya-Moraga.)"
  support-28: "Claire Kearney-Volpe aidant à faciliter un atelier p5.js basé sur la langue des signes et dirigé par Taeyoon Choi (Crédit image : Taeyoon Choi)"
  support-29: "Processing Foundation Fellow DIY Girls dirige un programme de codage créatif à Los Angeles (Crédit image : DIY Girls)"
  support-30: "Processing Fellow Digital Citizens Lab"
  support-31: "Rencontre entre Bicoastal p5.js à l'UCLA DMA et NYU ITP"
  support-32: "La Processing Foundation"
  support-33: " a été fondée en 2012 après plus d'une décennie de travail avec le logiciel Processing d'origine. La mission de la fondation est de promouvoir la culture logicielle dans les arts visuels, la culture visuelle dans les domaines liés à la technologie - et de rendre ces domaines accessibles à diverses communautés. Notre objectif est de permettre à des personnes de tous intérêts et de tous horizons d'apprendre à programmer et à faire du travail créatif avec du code, en particulier à ceux qui n'auraient peut-être pas accès à ces outils et ressources autrement."
  support-17-alt: ""
  support-18-alt: ""
  support-19-alt: ""
  support-20-alt: ""
  support-21-alt: ""
  support-22-alt: ""
  support-23-alt: ""
  support-24-alt: ""
  support-25-alt: ""
  support-26-alt: ""
  support-27-alt: ""
  support-28-alt: ""
  support-29-alt: ""
  support-30-alt: ""
  support-31-alt: ""

learn:
  learn-title: "Apprendre"
  learn1: "Ces tutoriels donnent un aperçu plus approfondi ou plus détaillé de sujets particuliers. Consultez la "
  learn2: "page des exemples"
  learn3: " pour voir de courtes démonstrations de divers sujets p5.js."
  introduction-to-p5js-title: "Introduction à p5.js"
  hello-p5js-title: "Salut p5.js"
  hello-p5js: "Cette courte vidéo vous présentera la librairie et ce que vous pouvez faire avec elle."
  getting-started-title: "Pour démarrer"
  getting-started: "Bienvenue sur p5.js ! <br> Cette introduction couvre les bases de la mise en place d'un projet p5.js."
  p5js-overview-title: "Vue d'ensemble de p5.js"
  p5js-overview: "Un aperçu des principales caractéristiques de p5.js."
  p5js-processing-title: "p5.js et Processing"
  p5js-processing: "Les principales différences entre les deux et comment passer de l'un à l'autre."
  p5-screen-reader-title: "p5 avec un lecteur d'écran"
  p5-screen-reader: "Mettre en place de p5 afin qu'il puisse être utilisé facilement avec un lecteur d'écran."
  using-local-server-title: "Utiliser un serveur local"
  using-local-server: "Comment mettre en place un serveur local sous Mac OSX, Windows ou Linux."
  p5js-wiki-title: "Wikie p5.js"
  p5js-wiki: "Documentation supplémentaire et tutoriels fournis par la communauté"
  connecting-p5js-title: "Connecter p5.js"
  creating-libraries-title: "Créer des librairies"
  creating-libraries: "Créer des librairies additionelles à p5.js."
  nodejs-and-socketio-title: "node.js et socket.io"
  nodejs-and-socketio: "Utiliser un serveur node.js avec p5.js, communication via socket.io."
  programming-topics-title: "Sujets de programmation"
  beyond-the-canvas-title: "Au-delà de l'esquisse"
  beyond-the-canvas: "Créer et manipuler des éléments sur la page au-delà de l'esquisse."
  3d-webgl-title: "3D/WebGL"
  3d-webgl: "Developing advanced graphics applications in p5.js using WEBGL mode."
  color-title: "Couleur"
  color: "Une introduction aux couleurs numériques."
  coordinate-system-and-shapes-title: "Système de coordonnées et formes"
  coordinate-system-and-shapes: "Dessiner des formes simples et utiliser le système de coordonnées."
  interactivity-title: "Interactivité"
  interactivity: "Introduction à l'interactivité avec la souris et le clavier."
  program-flow-title: "Déroulement du programme"
  program-flow: "Introduction au contrôle du déroulement d'un' programme avec p5.js."
  curves-title: "Courbes"
  curves: "Une introduction aux trois types de courbes dans p5.js : arcs, courbes splines et courbes de Bézier."
  becoming-a-better-programmer-title: "Devenir un meilleur développeur"
  debugging-title: "Debugger"
  debugging: "Guide pratique du débuggage pour tous."
  optimizing-title: "Optimisation du code p5.js pour la performance"
  optimizing: "Un tutoriel de conseils et d'astuces pour optimiser votre code afin qu'il s'exécute plus rapidement et plus facilement."
  test-driven-development-title: "Tests unitaires et développement piloté par les tests (TDD)"
  test-driven-development: "Sauvez-vous de l'agonie le jour de l'installation. Qu'est-ce que les test unitaires et comment les utiliser ? Par Andy Timmons."
  contributing-to-the-community-title: "Contribuer à la communauté"
  development-title: "Développement"
  development: "Mise en route et vue d'ensemble pour contribuer au développement."
  looking-inside-title: "Regarder à l'intérieur de p5"
  looking-inside: "Une introduction simple à la structure des fichiers et aux outils pour le développement de p5.js, par Luisa Pereira."
  writing-tutorial-title: "Rédiger un tutoriel"
  writing-tutorial: "Un guide pour la rédaction d'un tutoriel de programmation p5.js."
  writing-a-tutorial-title: "Guide pour contribuer aux tutoriels p5.js"
  writing-a-tutorial-author: "Ce tutoriel a été écrit par Tega Brain."
  writing-a-tutorial-1: "Nous invitons les éducateurs, les contributeurs et les amateurs en général à contribuer aux tutoriels de p5.js. Le projet p5.js rend le codage créatif et le développement open source plus accessible à une communauté diversifiée et nous sommes ravis de publier des tutoriels sur tous les aspects du processus de développement. Notre matériel pédagogique comprend pour l'instant des guides sur l'apprentissage de p5, la technique de programmation et la façon de contribuer à un projet open source."
  writing-a-tutorial-2: "Nous accueillons volontiers de nouveaux tutoriels et ce guide décrit les étapes de la proposition, de la préparation et de la contribution."
  writing-a-tutorial-how-start-title: "Comment démarrer :"
  writing-a-tutorial-how-start-1: "Vérifiez que le sujet que vous proposez n'a pas déjà été abordé. Voici "
  writing-a-tutorial-how-start-2: "un tableur "
  writing-a-tutorial-how-start-3: "qui présente les tutoriels en cours. Si votre sujet est répertorié comme étant en cours, vous pouvez peut-être contribuer à celui-ci et à la préparation des travaux existants en vue de leur publication."
  writing-a-tutorial-how-start-4: "Si votre sujet n'est pas déjà couvert et n'est pas répertorié comme étant en cours, écrivez quelques phrases sur ce que vous vous proposez de traiter et envoyez-nous cette description par courriel à education@p5js.org."
  writing-a-tutorial-how-prepare-title: "Comment préparer un tutoriel p5.js en vue de sa publication en ligne :"
  writing-a-tutorial-how-prepare-1: "Lorsque votre tutoriel est prêt à être publié, veuillez suivre les étapes suivantes pour le préparer pour le site web p5.js."
  writing-a-tutorial-how-prepare-2: "Préparez le contenu de votre tutoriel sous la forme d'un fichier tutorial-name.hbs avec "
  writing-a-tutorial-how-prepare-3: "cette structure de base"
  writing-a-tutorial-how-prepare-4: ". Comme le montre ce fichier, il doit contenir un en-tête comme indiqué ci-dessous :"
  writing-a-tutorial-how-prepare-5: "Le dossier contenant votre tutoriel sera placé dans le dossier \"tutoriaux\" du site p5.js. Le fichier appelé index.hbs est la "
  writing-a-tutorial-how-prepare-6: "page d'accueil des tutoriaux p5.js"
  writing-a-tutorial-how-prepare-7: " et le fichier test-tutorial.hbs est le tutoriel de test."
  writing-a-tutorial-how-prepare-8: "Tout le contenu doit aller dans :"
  writing-a-tutorial-how-prepare-9: "la page, avec un formatage défini par les balises &lt;h1&gt ; et &lt;h2&gt ; les balises de paragraphe telles que sur la "
  writing-a-tutorial-how-prepare-10: "page du tutoriel de test."
  writing-a-tutorial-how-prepare-11: "Si votre tutoriel contient des images, celles-ci doivent être placées dans le dossier assets du site p5, à l'emplacement src/assets/learn/test-tutorial/images comme indiqué ci-dessous."
  writing-a-tutorial-how-prepare-12: "Pour formater correctement le code dans le html de la page, utilisez la balise :"
  writing-a-tutorial-embedding-title: "Encadrement des croquis p5.js"
  writing-a-tutorial-embedding-1: "Utiliser p5.js signifie que vous pouvez illustrer votre tutoriel avec des exemples de code animés, interactifs ou modifiables pour démontrer des concepts de programmation. Vos exemples doivent être préparés sous forme d'esquisses p5.js et peuvent être intégrés au tutoriel de deux façons."
  writing-a-tutorial-embedding-2: "Si l'exemple doit être modifiable comme dans "
  writing-a-tutorial-embedding-3: "les pages de référence"
  writing-a-tutorial-embedding-4: " du site p5.js, le croquis p5 doit être intégré dans la page html à l'aide du widget p5.js. Suivez "
  writing-a-tutorial-embedding-5: "ce guide "
  writing-a-tutorial-embedding-6: "sur la façon d'intégrer des croquis de p5.js en utilisant le widget écrit par "
  writing-a-tutorial-embedding-7: ". Vous pouvez également le voir en action sur la"
  writing-a-tutorial-embedding-8: " page du tutoriel test"
  writing-a-tutorial-embedding-9: "."
  writing-a-tutorial-embedding-10: "Si l'exemple doit être animé et/ou interactif mais non modifiable. Le croquis p5.js doit être intégré dans la page sous forme d'iframe, comme décrit ci-dessous."
  writing-a-tutorial-iframe-title: "Embed a p5 sketch using an iframe"
  writing-a-tutorial-iframe-1: "Une iframe est comme la création d'une fenêtre à travers laquelle vous pouvez voir une autre page, à part du reste de votre page. Dans ce cas, il s'agira d'une fenêtre vers l'index.html contenant votre croquis p5.js. "
  writing-a-tutorial-iframe-2: "Placez vos croquis p5 dans le dossier /src/assets/learn du site, dans un dossier portant le nom de votre croquis comme indiqué sur la capture d'écran. C'est là que doivent être stockées toutes les images et les croquis p5 liés par iframe."
  writing-a-tutorial-iframe-3: "Dans les sous-dossiers contenant vos exemples p5, il doit y avoir un fichier sketch.js et le fichier embed.html pour le croquis. "
  writing-a-tutorial-iframe-4: "Assurez-vous que votre fichier embed.html a les bons chemins d'accès aux librairies p5 du site. Si votre structure de fichier est la même que ci-dessus, le chemin d'accès à la bibliothèque p5.js doit être \"../../../js/p5.min.js\"."
  writing-a-tutorial-iframe-5: "Vous pouvez ensuite intégrer les fichiers d'index p5js comme des iframes dans le fichier .hbs qui contient le contenu de votre tutoriel. Le code d'intégration de l'iframe sera alors le suivant : "
  writing-a-tutorial-iframe-6: "Stylisation de l'iframe (qui peut se faire directement dans le post ou dans une feuille de style) :  "
  writing-a-tutorial-iframe-7: "Ici, vous pouvez voir le sketch à vide en cours d'exécution : "
  writing-a-tutorial-iframe-8: "Et le voici est intégré au site p5 à l'aide du code ci-dessous :  "
  writing-a-tutorial-iframe-9: "Une chose à noter est que vous devez définir manuellement la taille de l'iframe, donc cela fonctionne mieux si les éléments sont de taille standard."
  writing-a-tutorial-iframe-10: "Notez également que les liens vers les fichiers de la librairie p5.js ne se font pas à partir de la page .eps avec tout le contenu du tutoriel. Ils seront plutôt situés dans la page html qui rend votre croquis (dans ce cas, appelée embed.html)."
  writing-a-tutorial-iframe-11: "Retrouvez plus d'informations sur l'intégration des croquis p5.js "
  writing-a-tutorial-embed-iframe-12: "ici."
  writing-a-tutorial-finishing-title: "Terminer le travail"
  writing-a-tutorial-finishing-1: "Une fois que vous avez terminé la rédaction de votre tutoriel et que votre contenu a reçu le feu vert. Rendez-vous sur le site p5.js, préparez votre contenu comme décrit ci-dessus, puis envoyez une pull request au site p5.js pour que nous puissions publier votre contribution !"
  writing-a-tutorial-finishing-2: "Merci !"
  color-description1: "Ce tutoriel est tiré du livre Learning Processing de Daniel Shiffman, publié par Morgan Kaufmann, © 2008 Elsevier Inc. Tous droits réservés. Il a été porté sur P5 par Kelly Chang. Si vous voyez des erreurs ou si vous avez des commentaires, "
  color-description2: " veuillez nous le faire savoir."
  color-p1x1: "Dans le monde numérique, quand on veut parler d'une couleur, il faut de la précision. Dire : \"Hé, tu peux faire ce cercle en sorte de bleu-vert ?\" ne suffira pas. La couleur, au contraire, est définie comme une gamme de nombres. Commençons par le cas le plus simple : noir et blanc ou niveaux de gris. 0 signifie noir, 255 signifie blanc. Entre les deux, un nombre sur deux - 50, 87, 162, 209, etc. - est une nuance de gris allant du noir au blanc."
  color-p2x1: "En additionnant les méthodes "
  color-p2x2: " et "
  color-p2x3: " avant de dessiner quelque chose, nous pouvons définir la couleur de n'importe quelle forme donnée. Il y a aussi la fonction "
  color-p2x4: ", qui définit une couleur de fond pour la fenêtre. Voici un exemple."
  color-code1: "background(255);    // Mettre le fond en blanc \n stroke(0);          // Mettre le contour (trait) en noir \n fill(150);          // Mettre l'intérieur d'une forme (remplir) en gris \n rect(50,50,75,100); // Dessiner le rectangle"
  color-p3x1: "Les fonctions permettent d'éliminer les contours ou les remplissages : "
  color-p3x2: " et "
  color-p3x3: ". Nous pourrions instinctivement dire \"stroke(0)\" pour aucun contour, cependant, il est important de se souvenir que 0 n'est pas \"rien\", mais dénote plutôt la couleur noire. N'oubliez pas non plus de ne pas éliminer les deux - avec "
  color-p3x4: " et "
  color-p3x5: ", rien n'apparaîtra !"
  color-p4x1: "En outre, si nous dessinons deux formes, p5.js utilisera toujours le dernier trait et le dernier remplissage spécifiés, en lisant le code de haut en bas."
  color-rgb-title: "Couleurs RVB"
  color-rgb-p1x1: "Vous vous souvenez de la peinture au doigt ? En mélangeant trois couleurs \"primaires\", n'importe quelle couleur pouvait être générée. En faisant tourbillonner toutes les couleurs ensemble, on obtenait un brun boueux. Plus vous ajoutiez de peinture, plus elle devenait sombre. Les couleurs numériques sont également construites en mélangeant trois couleurs primaires, mais cela fonctionne différemment de la peinture. Premièrement, les couleurs primaires sont différentes : rouge, vert et bleu (c'est-à-dire la couleur \"RVB\"). Et avec la couleur à l'écran, vous mélangez de la lumière, pas de la peinture, donc les règles de mélange sont également différentes."
  color-rgb-li1: "Rouge + Vert = Jaune"
  color-rgb-li2: "Rouge + Bleu = Violet"
  color-rgb-li3: "Vert + Bleu = Cyan (Bleu-Vert)"
  color-rgb-li4: "Rouge + Vert + Bleu = Blanc"
  color-rgb-li5: "Aucune couleur = Noir"
  color-rgb-p2x1: "Cela suppose que les couleurs sont toutes aussi vives que possible, mais bien sûr, vous disposez d'une gamme de couleurs, donc un peu de rouge plus un peu de vert plus un peu de bleu égales du gris, et un peu de rouge plus un peu de bleu égales du violet foncé. Il faudra peut-être s'y habituer, mais plus vous programmerez et expérimenterez avec les couleurs RVB, plus cela deviendra instinctif, un peu comme si vous faisiez tourbillonner les couleurs avec vos doigts. Et bien sûr, vous ne pouvez pas dire : "Mélangez un peu de rouge avec un peu de bleu", vous devez fournir une quantité exacte. Comme pour l'échelle des gris, les différents éléments de couleur sont exprimés sous forme de fourchettes allant de 0 (aucune de ces couleurs) à 255 (autant que possible), et ils sont énumérés dans l'ordre R, V et B. Vous vous familiariserez avec le mélange des couleurs RVB par l'expérimentation, mais nous allons maintenant aborder du code utilisant quelques couleurs courantes."
  color-transparency-title: "La Transparence"
  color-transparency-p1x1: "En plus des composantes rouge, verte et bleue de chaque couleur, il existe une quatrième composante optionnelle supplémentaire, appelée \"alpha\" de la couleur. Alpha signifie transparence et est particulièrement utile lorsque vous voulez dessiner des éléments qui apparaissent partiellement transparents les uns sur les autres. Les valeurs alpha d'une image sont parfois appelées collectivement le \"canal alpha\" d'une image."
  color-transparency-p2x1: "Il est important de réaliser que les pixels ne sont pas littéralement transparents, c'est simplement une illusion commode qui est réalisée en mélangeant les couleurs. Dans les coulisses, p5.js prend les numéros des couleurs et ajoute un pourcentage d'une couleur à un autre, créant ainsi la perception optique du mélange. (Si vous vous intéressez à la programmation de lunettes de couleur rose, c'est par là que vous commenceriez)."
  color-transparency-p3x1: "Les valeurs Alpha vont également de 0 à 255, 0 étant complètement transparent (c'est-à-dire 0 % opaque) et 255 complètement opaque (c'est-à-dire 100 % opaque)."
  color-custom-ranges-title: "Gammes de couleurs personnalisées"
  color-custom-ranges-p1x1: "La couleur RVB avec des plages de 0 à 255 n'est pas la seule façon de gérer la couleur dans p5.js, en fait, elle nous permet de penser à la couleur comme nous le voulons. Par exemple, vous préférerez peut-être considérer la couleur comme une gamme de 0 à 100 (comme un pourcentage). Vous pouvez le faire en spécifiant une couleur personnalisée "
  color-custom-ranges-p2x1: "La fonction ci-dessus dit : \"OK, nous voulons penser à la couleur en termes de rouge, vert et bleu. La plage des valeurs RGB sera de 0 à 100.\""
  color-custom-ranges-p3x1: "Bien qu'il soit rarement pratique de le faire, vous pouvez également avoir des gammes différentes pour chaque composante de couleur :"
  color-custom-ranges-p4x1: "Nous disons maintenant : \"Les valeurs rouges vont de 0 à 100, les vertes de 0 à 500, les bleues de 0 à 10, et les alpha de 0 à 255.\""
  color-custom-ranges-p5x1: "Enfin, même si vous n'aurez probablement besoin que de la couleur RVB pour tous vos besoins de programmation, vous pouvez également spécifier les couleurs en mode tSL (teinte, saturation et luminosité). Sans entrer dans les détails, la couleur TSL fonctionne comme suit :"
  color-custom-ranges-li1x1: "Teinte (Hue)"
  color-custom-ranges-li1x2: "—Le type de couleur, varie de 0 à 255 par défaut."
  color-custom-ranges-li2x1: "Saturation"
  color-custom-ranges-li2x2: "—La vibrance de la couleur, 0 to 255 par défaut."
  color-custom-ranges-li3x1: "Luminosité (Brightness)"
  color-custom-ranges-li3x2: "—Évidemment, la luminosité de la couleur, 0 to 255 par défaut."
  color-custom-ranges-p6x1: "Avec "
  color-custom-ranges-p6x2: " vous pouvez définir vos propres fourchettes pour ces valeurs. Certains préfèrent une fourchette de 0 à 360 pour la teinte (pensez à 360 degrés sur une roue des couleurs) et de 0 à 100 pour la saturation et la luminosité (pensez à 0 à 100 %)."
  coordinate-system-description1: "Ce tutoriel vient de l'ouvrage "
  coordinate-system-description2: "Learning Processing"
  coordinate-system-description3: " par Daniel Shiffman, publié par Morgan Kaufmann, © 2008 Elsevier Inc. Tous droits réservés. Il a été porté sur p5.js par Alex Yixuan Xu. Si vous voyez des erreurs ou avez des commentaires, veuillez "
  coordinate-system-description4: "Faites-le nous savoir"
  coordinate-system-description5: "."
  coordinate-system-description-title: "Coordinate System and Shapes"
  coordinate-system-description-p1x1: "Before we begin programming with p5, we must first channel our eighth grade selves, pull out a piece of graph paper, and draw a line. The shortest distance between two points is a good old fashioned line, and this is where we begin, with two points on that graph paper."
  coordinate-system-description-p2x1: "The above figure shows a line between point A (1,0) and point B (4,5). If you wanted to direct a friend of yours to draw that same line, you would give them a shout and say \"draw a line from the point one-zero to the point four-five, please.\" Well, for the moment, imagine your friend was a computer and you wanted to instruct this digital pal to display that same line on its screen. The same command applies (only this time you can skip the pleasantries and you will be required to employ a precise formatting). Here, the instruction will look like this:"
  coordinate-system-description-p3x1: "Even without having studied the syntax of writing code, the above statement should make a fair amount of sense. We are providing a command (which we will refer to as a \"function\") for the machine to follow entitled \"line.\" In addition, we are specifying some arguments for how that line should be drawn, from point A (1,0) to point B (4,5). If you think of that line of code as a sentence, the function is a verb and the arguments are the objects of the sentence. The code sentence also ends with a semicolon instead of a period."
  coordinate-system-description-p4x1: "The key here is to realize that the computer screen is nothing more than a fancier piece of graph paper. Each pixel of the screen is a coordinate - two numbers, an \"x\" (horizontal) and a \"y\" (vertical) - that determines the location of a point in space. And it is our job to specify what shapes and colors should appear at these pixel coordinates."
  coordinate-system-description-p5x1: "Nevertheless, there is a catch here. The graph paper from eighth grade (\"Cartesian coordinate system\") placed (0,0) in the center with the y-axis pointing up and the x-axis pointing to the right (in the positive direction, negative down and to the left). The coordinate system for pixels in a computer window, however, is reversed along the y-axis. (0,0) can be found at the top left with the positive direction to the right horizontally and down vertically."
  coordinate-system-simple-shapes-title: "Simple Shapes"
  coordinate-system-simple-shapes-p1x1: "The vast majority of the programming examples you'll see with p5 are visual in nature. These examples, at their core, involve drawing shapes and setting pixels. Let's begin by looking at four primitive shapes."
  coordinate-system-simple-shapes-p2x1: "For each shape, we will ask ourselves what information is required to specify the location and size (and later color) of that shape and learn how p5 expects to receive that information. In each of the diagrams below, we'll assume a window with a width of 100 pixels and height of 100 pixels."
  coordinate-system-simple-shapes-p3x1: "A "
  coordinate-system-simple-shapes-p3x2: " is the easiest of the shapes and a good place to start. To draw a point, we only need an x and y coordinate."
  coordinate-system-simple-shapes-p4x1: "A "
  coordinate-system-simple-shapes-p4x2: " isn't terribly difficult either and simply requires two points: (x1,y1) and (x2,y2):"
  coordinate-system-simple-shapes-p5x1: "Once we arrive at drawing a "
  coordinate-system-simple-shapes-p5x2: ", things become a bit more complicated. In p5, a rectangle is specified by the coordinate for the top left corner of the rectangle, as well as its width and height."
  coordinate-system-simple-shapes-p6x1: "A second way to draw a rectangle involves specifying the centerpoint, along with width and height. If we prefer this method, we first indicate that we want to use the "
  coordinate-system-simple-shapes-p6x2: " mode before the instruction for the rectangle itself. Note that p5 is case-sensitive."
  coordinate-system-simple-shapes-p7x1: "Finally, we can also draw a rectangle with two points (the top left corner and the bottom right corner). The mode here is "
  coordinate-system-simple-shapes-p7x2: ". Note this example gives the same result on screen as the example above."
  coordinate-system-simple-shapes-p8x1: "Once we have become comfortable with the concept of drawing a rectangle, an "
  coordinate-system-simple-shapes-p8x2: " is a snap. In fact, it is identical to "
  coordinate-system-simple-shapes-p8x3: " with the difference being that an ellipse is drawn where the bounding box of the rectangle would be. The default mode for "
  coordinate-system-simple-shapes-p8x4: " is "
  coordinate-system-simple-shapes-p8x5: ", rather than "
  coordinate-system-simple-shapes-p8x6: "."
  coordinate-system-simple-shapes-p9x1: "Now let's look at what some code with shapes in more complete form, with canvas dimensions of 200 by 200. Note the use of the createCanvas() function to specify the width and height of the canvas."

test-tutorial:

libraries:
  Libraries: "Libraries"
  core-libraries: "Core Libraries"
  community-libraries: "Community Libraries"
  libraries-created-by: "Created by:"
  p5.sound: "p5.sound extends p5 with Web Audio functionality including audio input, playback, analysis and synthesis."
  p5.accessibility: "p5.accessibility makes the p5 canvas more accessible to people who are blind and visually impaired."
  asciiart: "p5.asciiart is a simple and easy to use image - to - ASCII art converter for p5js."
  p5.ble: "A Javascript library that enables communication between BLE devices and p5 sketches."
  blizard.js: "a library for making DOM manipulation simple"
  p5.bots: "With p5.bots you can interact with your Arduino (or other microprocessor) from within the browser. Use sensor data to drive a sketch; use a sketch to drive LEDs, motors, and more! Created by "
  p5.clickable: "Event driven, easy-to-use button library for p5.js."
  p5.cmyk.js: "CMYK ColorSpace"
  p5.collide2D: "p5.collide2D provides tools for calculating collision detection for 2D geometry with p5.js."
  p5.createloop: "Create animation loops with noise and GIF exports in one line of code."
  p5.dimensions: "p5.dimensions extends p5.js' vector functions to work in any number of dimensions."
  p5.EasyCam: "Simple 3D camera control with inertial pan, zoom, and rotate. Major contributions by Thomas Diewald."
  p5.experience: "Extensive library for p5.js that adds additional event-listening functionality for creating canvas-based web applications."
  p5.func: "p5.func is a p5 extension that provides new objects and utilities for function generation in the time, frequency, and spatial domains."
  p5.geolocation: "p5.geolocation provides techniques for acquiring, watching, calculating, and geofencing user locations for p5.js."
  p5.gibber: "p5.gibber provides rapid music sequencing and audio synthesis capabilities."
  grafica.js: "grafica.js lets you add simple but highly configurable 2D plots to your p5.js sketches."
  p5.gui: "p5.gui generates a graphical user interface for your p5.js sketches."
  p5.localmessage: "p5.localmessage provides a simple interface to send messages locally from one sketch to another for easy multi-window sketching!"
  marching: "Raster to vector conversion, isosurfaces."
  mappa: "Mappa provides a set of tools for working with static maps, tile maps, and geo-data. Useful when building geolocation-based visual representations."
  ml5.js: "ml5.js builds on Tensorflow.js and provides friendly access to machine learning algorithms and models in the browser."
  p5.play: "p5.play provides sprites, animations, input and collision functions for games and gamelike applications."
  p5.particle: "The Particle and Fountain objects can be used to create data-driven effects that are defined through user structures or JSON input and user-draw functions."
  p5.Riso: "p5.Riso is a library for generating files suitable for Risograph printing. It helps turn your sketches into multi-color prints."
  rita.js: "RiTa.js provides a set of natural language processing objects for generative literature."
  RotatingKnobs: "Make knobs you can rotate with custom graphics and return value ranges"
  p5.scenemanager: "p5.SceneManager helps you create sketches with multiple states / scenes. Each scene is a like a sketch within the main sketch."
  p5.screenPosition: "Adds the screenX and screenY functionality from Processing to P5js."
  p5.scribble: "Draw 2D primitives in a sketchy look. Created by Janneck Wullschleger, based on a port of the original Processing library "
  p5.serial: "p5.serial enables serial communication between devices that support serial (RS-232) and p5 sketches running in the browser."
  Shape5: "Shape5 is a 2D primative library for elementary students who are learning to code for the first time."
  p5.shape.js: "A library built to add more simple shapes to the p5.js framework."
  p5.speech: "p5.speech provides simple, clear access to the Web Speech and Speech Recognition APIs, allowing for the easy creation of sketches that can talk and listen."
  p5.start2d.js: "p5 extension for 2D static art using px, mm, cm or inches"
  p5.tiledmap: "p5.tiledmap provides drawing and helper functions to include maps in your sketches."
  p5.touchgui: "A multi-touch and mouse GUI Library for p5.js."
  tramontana: "Tramontana is a platform for easily use many devices (iOS, Android, tramontana Board, ...) to create interactive environments, interactive spaces or just prototype experiences at scale and in space."
  vida: "Vida is a simple library that adds camera (or video) based motion detection and blob tracking functionality to p5js."
  p5.voronoi: "p5.voronoi provides a set of tools to draw and utilize voronoi diagrams in your p5.js sketches."
  p5.3D: "3D Text and Images in WebGL."
  using-a-library-title: "Using a library"
  using-a-library1: "A p5.js library can be any JavaScript code that extends or adds to the p5.js core functionality. There are two categories of libraries. Core libraries ("
  using-a-library3: ") are part of the p5.js distribution, while contributed libraries are developed, owned, and maintained by members of the p5.js community."
  using-a-library4: "To include a library in your sketch, link it into your HTML file, after you have linked in p5.js. An example HTML file might look like this:"
  create-your-own-title: "Create Your Own"
  create-your-own1: "p5.js welcomes libraries contributed by others! Check out the"
  create-your-own2: "libraries tutorial"
  create-your-own3: "for more specifics about how to create one."
  create-your-own4: "If you have created a library and would like to have it included on this page, submit this form!"

community:
  community-title: "Community"
  community-statement-title: "p5.js Community Statement"
  community-statement1: "p5.js is a community interested in exploring the creation of art and design with technology."
  community-statement2: "We are a community of, and in solidarity with, people from every gender identity and expression, sexual orientation, race, ethnicity, language, neuro-type, size, ability, class, religion, culture, subculture, political opinion, age, skill level, occupation, and background. We acknowledge that not everyone has the time, financial means, or capacity to actively participate, but we recognize and encourage involvement of all kinds. We facilitate and foster access and empowerment. We are all learners."
  community-statement3: "We like these hashtags: #noCodeSnobs (because we value community over efficiency), #newKidLove (because we all started somewhere), #unassumeCore (because we don't assume knowledge), and #BlackLivesMatter (because of course)."
  in-practice-title: "In practice:"
  in-practice1: " We are not code snobs. We do not assume knowledge or imply there are things that somebody should know. "
  in-practice2: "We insist on actively engaging with requests for feedback regardless of their complexity."
  in-practice3: "We welcome newcomers and prioritize the education of others. We strive to approach all tasks with the enthusiasm of a newcomer. Because we believe that newcomers are just as valuable in this effort as experts."
  in-practice4: "We consistently make the effort to actively recognize and validate multiple types of contributions."
  in-practice5: "We are always willing to offer help or guidance."
  in-times-conflict-title: "In times of conflict:"
  in-times-conflict1: "We listen."
  in-times-conflict2: "We clearly communicate while acknowledging other's feelings."
  in-times-conflict3: "We admit when we're wrong, apologize, and accept responsibility for our actions."
  in-times-conflict4: "We are continuously seeking to improve ourselves and our community."
  in-times-conflict5: "We keep our community respectful and open."
  in-times-conflict6: "We make everyone feel heard."
  in-times-conflict7: "We are mindful and kind in our interactions."
  in-the-future-title: "In the future:"
  in-the-future1: "The future is now."
  sharing-title: "Sharing"
  sharing1: "This statement is licensed under a "
  sharing2: "Creative Commons license"
  sharing3: ". Please feel free to share and remix with attribution."

  contribute-title: "Contribute"
  contribute1: "Our community is always looking for enthusiasts to help in all different ways."
  develop-title: "Develop."
  develop1: "GitHub"
  develop2: " is the main place where code is collected, issues are documented, and discussions about code are had. Check out the "
  develop3: " development tutorial"
  develop4: " to get started, or "
  develop5: "create your own library."
  document-title: "Document."
  document1: " Everyone loves documentation. Help is needed "
  document2: "porting examples"
  document3: ", and"
  document4: " adding documentation"
  document5: ", and creating tutorials."
  teach-title: "Teach."
  teach1: " Teach a workshop, a class, a friend, a collaborator! Tag @p5xjs on Twitter and we will do our best to share what you're doing."
  create-title: "Create."
  create1: " p5.js is looking for designers, artists, coders, programmers to bring your creative and amazing work to show on the front page and inspire other people. Submit your work to "
  create2: "hello@p5js.org"
  create3: "."
  donate-title: "Donate."
  donate1: " p5.js is free and open source and made by artists. Help support the development of p5.js through a donation to the "
  donate2: "Processing Foundation"
  donate3: "."
  contributors-conference-title: "p5.js Contributors Conference"
  contributors-conference1: "While most work happens online, we also convene IRL. We've had two contributors conferences held at the "
  contributors-conference2: "at Carnegie Mellon University in Pittsburgh, PA. Artists, designers, developers, educators, and got together to advance the p5.js project."
  participants-title: "Participants"
  support-title: "Support"
  support1: "Our contributor conference took place at the"
  support2: "at Carnegie Mellon University, an academic laboratory for atypical, anti-disciplinary, and inter-institutional research at the intersections of arts, science, technology, and culture."
  support3: "This event was made possible by a grant from the"
  support4: "and generous support from the"
  support5: "and"
  support6: "Thank you!"
  mailing-list-title: "Mailing list"
  mailing-list-1: "Enter your email address to receive occasional updates from the Processing Foundation."

  2015contributors-conference-title: "Contributors Conference 2015"
  2015contributors-conference-date: "May 25-31"
  2015contributors-conference1: "A group of approximately 30 participants gathered spent a week at the "
  2015contributors-conference2: ", advancing the code, documentation, and community outreach tools of the p5.js programming environment. Participants came from as far away as Hong Kong, Seattle, Los Angeles, Boston and New York. Most were working professionals in the fields of creative technology, interaction design, and new-media arts, but the group also included a half-dozen undergraduate and graduate students from Carnegie Mellon’s Schools of Art and Architecture."
  2015contributors-conference3: "Photos by Taeyoon Choi"
  2015contributors-conference-diversity-title: "Diversity"
  2015contributors-conference-diversity1: "Alongside technical development, one of the main focuses of this conference was outreach, community, and diversity. The conference began with a panel"
  2015contributors-conference-diversity2: "Diversity: Seven Voices on Race, Gender, Ability &amp; Class for FLOSS and the Internet"
  2015contributors-conference-diversity3: ". "
  2015contributors-conference-diversity4: "Organized by"
  2015contributors-conference-diversity5: "and"
  2015contributors-conference-diversity6: ", "
  2015contributors-conference-diversity7: "the panel took place Tuesday, 25 May 2015 in Kresge Auditorium at Carnegie Mellon University. Speakers included"
  2015contributors-conference-diversity8: "and"
  2015contributors-conference-diversity9: "."
  2015cc_1: "Diverse group of participants smile and make a p5 sign with their hands"
  2015cc_2: "Participants jump, smile and throw their hands in the air on a green lawn"
  2015cc_3: "Woman presenting the p5.js community statement from her laptop"
  2015cc_4: "Woman expressively speaks into a microphone while two male collaborators look on"
  2015cc_5: "Participants attentively smile towards the front of the class"
  2015cc_6: "Woman reads about p5.js into a microphone to three female students"
  2015cc_7: "Participants sit in a circle around a white board with sticky notes on it while a female student speaks into a microphone"
  2015cc_8: "Participants sit around a table looking at each others laptops and compare code "
  2015cc_9: "Whiteboard with different colored sticky and written notes about programming "
  2015cc_10: "Woman speaking into a microphone about valuing different skill sets while a group of participants with laptops look at her powerpoint in a classroom"
  2015cc_11: "Woman speaks at a podium in an auditorium while three participants sit on the stage and another three are skyping in on the stage screen"
  2015cc_12: "Overhead view of a classroom with participants working on their laptops"
  2015cc_13: "Five people having a discussion in a circle"
  2015cc_14: "Five people in a circle with their laptops sharing their notes"
  2015cc_15: "Man in a classroom with a microphone speaking out to a group of participants"
  2019contributors-conference-title: "Contributors Conference 2019"
  2019contributors-conference-date: "August 13-18"
  2019contributors-conference1: "An interdisciplinary group of 35 participants gathered at the "
  2019contributors-conference2: ", advancing the code, documentation, and community outreach tools and exploring the current landscape of the p5.js programming environment. Comprising a diverse range of participants within the fields of creative technology, interaction design, and new media arts, the conference was aimed at fostering dialogue through a multidisciplinary lens. Working groups focused on several topic areas: Access; Music and Code in Performance; Landscape of Creative Tech; and Internationalization."
  2019contributors-conference3: "Videos by Qianqian Ye"
  2019contributors-conference4: "Photos by Jacquelyn Johnson"
  outputs: "Outputs"
  output1: ". An implementation of highly flexible triangle, square, hexagon, and octagon girds for p5.js. Created by Aren Davey."
  output2: ". A set of template files for building a multi-device, multiplayer game where multiple clients can connect to a specified host page. Created by L05."
  output3: "Experiments using"
  output3-1: ", testing early implementations of softCompile, OSC interfacing and added connectivity with demo for MIDI setup. A p5.js collaborative live-coding vj environment! Created by Ted Davis."
  output4: "A panel on Blackness and Gender in Virtual Space led by American Artist, with shawné michaelain holloway and LaJuné McMillian."
  output5: "Workshops led by Everest Pipkin and Jon Chambers."
  output6: "A prototype of a "
  output6-1: "notebook interface for p5.js."
  output6-2: "Created by Allison Parrish."
  output7: "New art installations by Stalgia Grigg, LaJuné McMillian, Aatish Bhatia, and Jon Chambers."
  output8: "p5.js Global Contributor's Toolkit."
  output8-1: "Created by Aarón Montoya-Moraga, Kenneth Lim, Guillermo Montecinos, Qianqian Ye,  Dorothy R. Santos, and Yasheng She."
  output9: "How to write non-violent creative code."
  output9-1: " A zine led by Olivia Ross."
  output10: "An overhaul of the p5.js website for accessibility. Including updates for screen reader accessibility, and improvements to the home, download, getting started, and reference pages. With contributions from Claire Kearney-Volpe, Sina Bahram, Kate Hollenbach, Olivia Ross, Luis Morales-Navarro, Lauren McCarthy, and Evelyn Masso."
  output11: "Collaborative performances by Luisa Pereira, Jun Shern Chan, Shefali Nayak, Sona Lee, Ted Davis, and Carlos Garcia."
  output12: "A performance by Natalie Braginsky."
  output13: "A design of the p5.js library system for the p5 Editor. Created by Cassie Tarakajian and Luca Damasco."
  output14: "Prototypes connecting p5 to other libraries. Created by Alex Yixuan Xu and Lauren Valley."
  output15: "A closing campfire circle led by Golan Levin."
  2019cc_1: "Man at a podium giving a presentation to the group"
  2019cc_2: "Participants sitting at a long table having lunch and a discussion"
  2019cc_3: "Participants in a classroom, some working on their laptops, others talking "
  2019cc_4: "Classroom of participants working on their laptops"
  2019cc_5: "Participants in a meeting in a dark classroom"
  2019cc_6: "Woman giving presentation in a classroom of diverse participants"
  2019cc_7: "Participants conversing in a busy classroom"
  2019cc_8: "Woman with microphone speaking to fellow participants in a classroom"
  2019cc_9: "Participant speaks at a podium in front of projected text about the problem with anonymyzing data"
  2019cc_10: "Person with a microphone speaking to fellow participants in front of text that reads p5.js will not add any new features except those that increase access"
  2019cc_11: "Woman speaking into a microphone talking to fellow participants "
  2019cc_12: "A man with a microphone speaking to fellow participants"
  2019cc_13: "Participants sit in a classroom towards the speakers listening intently"
  2019cc_14: "Classroom of participants facing a speaker listen intently "
  2019cc_15: "Woman with microphone speaking to fellow participants with the text sacred boundaries in the projection behind her"
  2019cc_16: "Overhead view of participants listening to a panel of people with an image of a 3d rendered man on it "
  2019cc_17: "Participants sit around a table with their laptops and observe code on a screen"
  2019cc_18: "Woman sitting next to a lifesize teddy bear works on her laptop"
  2019cc_19: "Participants standing outside smiling"
  2019cc_20: "Four participants standing in a circle conversing"
  2019cc_21: "Participants sitting outside eating lunch together"
  2019cc_22: "Participants sitting around a large U shaped table looking towards the front of the classroom"
  2019cc_23: "Man sitting in front of the classroom speaking energetically into a microphone"
  2019cc_24: "Group photo of participants smiling enthusiastically with their hands in the air"
  2019cc_25: "Group of people sit around campfire made from four LCD monitors."

books:
  books-title: "Books"

examples:
  Examples: "Examples"
  back-examples: "Back to Examples"
  Structure: "Structure"
  Form: "Form"
  Data: "Data"
  Arrays: "Arrays"
  Control: "Control"
  Image: "Image"
  Color: "Color"
  Math: "Math"
  Simulate: "Simulate"
  Interaction: "Interaction"
  Objects: "Objects"
  Lights: "Lights"
  Motion: "Motion"
  Instance_Mode: "Instance Mode"
  Dom: "DOM"
  Drawing: "Drawing"
  Transform: "Transform"
  Typography: "Typography"
  3D: "3D"
  Input: "Input"
  Advanced_Data: "Advanced Data"
  Sound: "Sound"
  Mobile: "Mobile"
  Hello_P5: "Hello p5"

reference:
  Reference: "Reference"
